name: "GitOps"
description: "Run GitOps"
inputs:
  name:
    description: Name of the release
    required: true
  values-script:
    description: "Script to run to update values.yaml file"
  preview:
    description: "Should create values.preview.yaml"
    type: boolean
    default: false
  preview-values:
    description: "values to create values.preview.yaml file"
  preview-values-script:
    description: "Script to run to update values.preview.yaml file"
  canary:
    description: "Should do canary release"
    type: boolean
    default: false
  canary-values:
    description: "values to create values.canary.yaml file"
  canary-values-script:
    description: "Script to run to update values.canary.yaml file"
  repository:
    required: true
    description: "Repo to use for GitOps"
  repository-ssh-key:
    required: true
    description: "SSH Key to use to authenticate GitOps repo"
  input-directory:
    required: true
    description: "Input directory, usually containing a helm chart to sync over to GitOps repo"
  output-directory:
    required: true
    description: "Output directory, in the GitOps repo to place the output, usually a helm chart"
  canary-master-values-path:
    description: "where to copy the master values from, either development/release or another bootstrap values file"
  gitops-name:
    description: "the name of the app in the gitops repo"
  gitops-ingress-path:
    description: "path to ingress for this app"
  message:
    required: true
    description: "Message to use as part of the GitOps commit"
  user-name:
    required: true
    default: O2V2
    description: "Message to use as part of the GitOps commit"
  user-email:
    required: true
    default: ci@ovatu.com
    description: "Message to use as part of the GitOps commit"
runs:
  using: "composite"
  steps:
    - name: Checkout GitOps repo
      uses: actions/checkout@v3
      with: 
        repository: ${{ inputs.repository }}
        ssh-key: ${{ inputs.repository-ssh-key }}
        path: ./gitops

    - name: "Sync input directory to output directory"
      shell: bash
      run: |
        mkdir -p gitops/${{ inputs.output-directory }}/chart
        rsync -vr --delete $GITHUB_WORKSPACE/${{ inputs.input-directory }} $GITHUB_WORKSPACE/gitops/${{ inputs.output-directory }}/chart

    - name: Run values script
      if: inputs.values-script
      shell: bash
      working-directory: gitops/${{ inputs.output-directory }}/chart
      run: ${{ inputs.values-script }}

    - name: Touch preview file
      if: inputs.preview == 'true'
      shell: bash
      working-directory: gitops/${{ inputs.output-directory }}
      run: |
        mkdir -p preview

    - name: Create preview values
      if: inputs.preview == 'true' && inputs.preview-values
      shell: bash
      working-directory: gitops/${{ inputs.output-directory }}/preview
      run: echo "${{ inputs.preview-values }}" >> values.yaml

    - name: Run preview-values script
      if: inputs.preview == 'true' && inputs.preview-values-script
      shell: bash
      working-directory: gitops/${{ inputs.output-directory }}/preview
      run: ${{ inputs.preview-values-script }}

    - name: remove preview if empty
      if: inputs.preview != 'true'
      shell: bash
      working-directory: gitops/${{ inputs.output-directory }}
      run: rm -rf preview

    - name: Touch canary file
      if: inputs.canary == 'true'
      shell: bash
      working-directory: gitops/${{ inputs.output-directory }}
      run: |
        mkdir -p canary

    - name: Create canary values
      if: inputs.canary == 'true' && inputs.canary-master-values-path && inputs.gitops-ingress-path
      shell: bash
      working-directory: gitops
      run: |
        FULL_PATH="bootstrap/apps/${{ inputs.gitops-name }}/values/${{ inputs.canary-master-values-path }}.yaml"
        OUTPUT_FILE="${{ inputs.output-directory }}/canary/canary.yaml"
        if [ ! -f "$FULL_PATH" ]; then
          echo "File not found: $FULL_PATH"
          exit 1
        fi
        cp "$FULL_PATH" "$OUTPUT_FILE"
        yq eval "del(.${{ inputs.gitops-ingress-path }}.annotations.\"cert-manager.io/cluster-issuer\")" -i "$OUTPUT_FILE"
        yq eval '. |= {"canary": .}' -i "$OUTPUT_FILE"
        touch ${{ inputs.output-directory }}/canary/values.yaml

    - name: Run canary-values script
      if: inputs.canary == 'true' && inputs.canary-values-script
      shell: bash
      working-directory: gitops/${{ inputs.output-directory }}/canary
      run: ${{ inputs.canary-values-script }}

    - name: remove canary if empty
      if: inputs.canary != 'true'
      shell: bash
      working-directory: gitops/${{ inputs.output-directory }}
      run: rm -rf canary

    - name: "Commit changes to GitOps repo"
      shell: bash
      working-directory: gitops/${{ inputs.output-directory }}
      run: |
        git config user.name ${{ inputs.user-name }}
        git config user.email ${{ inputs.user-email }}

        git add .

        if [ -n "$(git status --porcelain)" ]; then
          git commit -am "${{ inputs.message }}"
          git pull --rebase
          git push
        fi
