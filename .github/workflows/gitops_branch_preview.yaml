name: Docker Build -> Docker Hub + AWS ECR -> Gitops (branch preview)

on:
  workflow_call:
    inputs:
      name:
        description: Friendly name of the app
        type: string
        required: true
      docker-name:
        description: Name of the docker image
        type: string
        required: true
      docker-file:
        description: Location of Dockerfile
        type: string
      helm-chart:
        description: Location of helm charts
        type: string
      gitops-repo:
        description: Repo for gitops
        type: string
        required: true
      gitops-name:
        description: Name of the gitops app
        type: string
        required: true
      gitops-script:
        description: Script to run during gitops (update values.yaml)
        type: string
    secrets:
      AWS_ASSUME_ROLE:
        required: true
      DOCKER_HUB_USERNAME:
        required: true
      DOCKER_HUB_PASSWORD:
        required: true
      GITOPS_REPO_PRIVATE_KEY:
        required: true
      SLACK_WEBHOOK_URL:
        required: true

permissions:
  contents: read
  packages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Set variables
      id: variables
      run: |
        echo "repo=${{ inputs.docker-name }}" >> $GITHUB_OUTPUT
        echo "tag=${{ github.ref_name }}-$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT
        echo "branch=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        echo "ref=$(git rev-parse --short "$GITHUB_SHA")" >> $GITHUB_OUTPUT

    - name: Login to Docker
      id: docker-login
      uses: ovatu/action-docker-login@main
      with:
        docker-hub-username: ${{ secrets.DOCKER_HUB_USERNAME }}
        docker-hub-password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        aws-assume-role: ${{ secrets.AWS_ASSUME_ROLE }}

    - name: Build and push
      uses: docker/build-push-action@v3
      with:
        file: deploy/kubernetes/docker/Dockerfile
        push: true
        tags: |
          ${{ steps.variables.outputs.repo }}:${{ steps.variables.outputs.tag }}
          ${{ steps.docker-login.outputs.ecr-registry }}/${{ steps.variables.outputs.repo }}:${{ steps.variables.outputs.tag }}

    - name: Gitops
      uses: ovatu/action-gitops-release@main
      with:
        repository: ${{ inputs.gitops-repo }}
        repository-ssh-key: ${{ secrets.GITOPS_REPO_PRIVATE_KEY }}
        input-directory: ${{ inputs.helm-chart }}
        output-directory: charts/${{ inputs.gitops-name }}/branches/${{ steps.variables.outputs.branch }}
        message: "[Actions][Build] repo:${{ inputs.gitops-name }}, branch: ${{ steps.variables.outputs.branch }}, commit:${{ steps.variables.outputs.ref }}"
        script: |
          echo "BEGIN writing values"
          yq -i '.appVersion = "${{ steps.variables.outputs.tag }}"' Chart.yaml
          yq -i '.image.repository = "${{ steps.docker-login.outputs.ecr-registry }}/${{ steps.variables.outputs.repo }}"' values.yaml
          yq -i '.image.tag = "${{ steps.variables.outputs.tag }}"' values.yaml
          echo "DONE writing values"

          echo "BEGIN inputs.gitops-script"
          ${{ inputs.gitops-script }}
          echo "BEGIN inputs.gitops-script"

    - name: Send Slack webhook
      uses: slackapi/slack-github-action@v1.23.0
      with:
        payload: |
          {
            "text": "Preview deployed: ${{ inputs.name }} / ${{ steps.variables.outputs.branch }}: ${{ steps.variables.outputs.ref }} }}",
            "blocks": [
              {
                "type": "header",
                "text": {
                  "type": "plain_text",
                  "text": "Preview deployed: ${{ inputs.name }} / ${{ steps.variables.outputs.branch }}"
                }
              },
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "${{ toJson(github.event.head_commit.message) }}"
                }
              },
              {
                "type": "divider"
              },
              {
                "type": "context",
                "elements": [
                  {
                    "type": "mrkdwn",
                    "text": "*App:* ${{ inputs.gitops-name }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Version:* ${{ steps.variables.outputs.tag }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Repo:* ${{ github.repository }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Branch:* ${{ steps.variables.outputs.branch }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Commit:* ${{ steps.variables.outputs.ref }}"
                  }
                ]
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK